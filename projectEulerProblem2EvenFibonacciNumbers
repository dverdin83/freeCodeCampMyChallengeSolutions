/*
 
Project Euler: Problem 2: Even Fibonacci Numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed nth term, find the sum of the even-valued terms.
*/
/*
Notes precoding process/ The end goal here isn't to FIND the even fibs, although it is an intermediate step. The goal is to find the SUM of the even fib numbers. So I would have to filter out the odd fibs with either an if statement or an appropriate incrament in a for statement. 

My inclination is that the incrament route is more performant than using a loop with conditionals and also more performant than some kind of nested loop structure with several variables.

However, that doesn't seem to work either because you still have to find each fib to filter through. So we will try and keep it to 2 variables and use 1 loop with conditionals rather than nested loop structures.

Technically the first fib to calculate is 0 so we initialize to that but the for loop iterator will start with 1 as it would be the "nextFib".

Well quite a few of distractions but going back to my original inclination to modify the incramentor seems to have done the trick. I put a boiler plate ++ incramentor before and went down a rabbit hole unit testing irrelevant code. The condition in the if statement is testing for i now as well.
NEEDS MAJOR REVISIONS TO LOGIC IN CODE AND PSEUDOCODE
*/
/* PSEUDOCODE
1. Pass integer argument n into function fiboEvenSum. (use strict javascript mode).
2.. Inside the fiboEvenSum function, declare and initialize variable fiboEvenSumTotal equal to 0.
3.. Inside the fibEvenSum function, declare and initialize integer variable nextFib = 0;
4.. Declare a loop initializing iterator varialbe i equal to 1 that incraments by i + nextFib till reaching argument n.
5... Inside the for loop, assign nextFib + i to integer variable nextFib.
6... Inside the for loop, declare an if statement testing that executes if i is an even number using modulo 2.
6a... If nextFib variable is even, add nextFib to fibEvenSumTotal integer variable.
6b... If i is not even, continue to next interation of for loop.
7.. When for loop completes execution, return integer variable fibEvenSumTotal.
*/



function fiboEvenSum(n) {
let fibEvenSumTotal = 0;
let nextNumber = 1;
let previousNumber = 0;
let currentFib = 0;

for (let i = 0; i <= n; i++) {

    currentFib = previousNumber + nextNumber;
    previousNumber = nextNumber;
    nextNumber = currentFib;
    console.log(currentFib);

    if (currentFib % 2 === 0) {
    fibEvenSumTotal+= currentFib;
     }
    
}

console.log(fibEvenSumTotal);
return fibEvenSumTotal;
}

fiboEvenSum(10);

/*Solution BUT PSEUDOCODE NEEDS TOTAL REWORK GOTTA GO DO SOMETHING FOR MY FAM NOW THO! Had got it halfway right with a clever incramentor but broke it down into simpler steps and included more variables.
*/
