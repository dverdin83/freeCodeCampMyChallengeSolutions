/* Intermediate Algo Challenge
*Sum All Odd Fibonacci Numbers
*Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than *or equal to num.
*
*The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the *sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci *sequence are 1, 1, 2, 3, 5 and 8.
*
*For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than 10 are *1, 1, 3, and 5
*/

/*PSEUDOCODE
1. Pass variable num into function sumFibs.
2. Declare counter variable sumOfOddFibs and intialize to 1.
3. Run a for loop initializing i = 1 that runs i times where i is less than variable num incramenting 1 per loop.
4. Using remainder (%) check for odds by dividing by two if result not equal to zero add i to counter variable sumOfOddFibs.
5. Return sumOfOddFibs.
*/

function sumFibs(num) {
  var sumOfOddFibs = 1;
  var nextFib = 1;
  var currentFib;
  var previousFib = 0;
   

  for (i=0; i <= num; i++) {
   currentFib = previousFib + nextFib;
    previousFib = nextFib;
    nextFib = currentFib;
   if (currentFib % 2 !== 0 && currentFib <= num) {
     sumOfOddFibs = currentFib + sumOfOddFibs;
   } 
  }
  console.log(sumOfOddFibs);
  return sumOfOddFibs;
}

sumFibs(4);
